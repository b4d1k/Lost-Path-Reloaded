local all_points = {
	["jupiter"] = {
		[1] = { -349.75, 3.9878, 407.8909}, --the Ash Heap anomaly
		[2] = { -161.104, 3.594, 390.616}, --the tower
		[3] = { 73.6377, 4.6632, 324.0991}, --the substation
		[4] = { 228.0958, -4.8275, 404.7565}, --the Plavni anomaly
		[5] = { 356.3688, 33.4261, 335.5996}, --the cement factory
		[6] = { -341.2063, -3.9061, 235.3816}, --Kopachi
		[7] = { -51.0059, 3.4884, 199.2509}, --Yanov
		[8] = { 276.5087, -29.4639, 163.2693}, --the quarry
		[9] = { -196.3071, -3.748, 72.5475}, --the mobile lab
		[10] = { -360.9959, 11.2529, -6.6707}, --the Volkhov complex
		[11] = { 55.7362, 10.5284, -18.2494}, --the anomalous grove
		[12] = { -108.4109, -0.3887, -145.4128}, --the parking lot
		[13] = { 43.5119, 23.9638, -190.6825}, --the checkpoint
		[14] = { 213.3307, 0.5969, -70.0109}, --the Bitumen anomaly
		[15] = { 399.7508, 4.505, -103.8042}, --the eastern tunnel
		[16] = { -412.9768, -0.0092, -343.6718}, --the storage containers
		[17] = { -65.5894, 23.7972, -322.6659}, --the ventilation complex
		[18] = { -128.901, 26.8013, -470.7353}, --the helipad
		[19] = { 234.1494, 15.171, -316.6919}, --the Concrete Bath anomaly
		[20] = { 277.403, 27.6236, -231.8324} --the Jupiter factory
		},
	["jupiter_underground"] = {
		[1] = { 0, 0, 0} --the tunnels
		},
	["k00_marsh"] = {
		[1] = { -161.21,0.39,-299.14}, --the Clear Sky base
		[2] = { 37.51, 5.32, -228.54}, --the fishery
		[3] = { -6.08,11.19,19.42}, --the pump station
		[4] = { -254.83, 2.19, -110.17}, --the anomaly cluster
		[5] = { 165.38, 12.61, 535.36}, --the road to Agroprom
		[6] = { 417.38, 5.32, 236.78}, --the machine yard
		[7] = { 280.52, 5.5, 61.02}, --the burnt house
		[8] = { 486.19, 4.36, -175.46}, --the southern checkpoint
		[9] = { 285.02, 1.8, -160.7} --the old church
		},
	["k01_darkscape"] = {
		[1] = { -587.87, -0.1, -411.62}, --the road to Cordon
		[2] = { 427.23, -0.12, -362.48}, --the gas station
		[3] = { 255.27, 1.14, -189.09}, --the sawmill
		[4] = { 400.78, -1.3, 285.05}, --the bridge
		[5] = { -405.64, 2.82, 623.14} --the road to Dark Valley
		},
	["k02_trucks_cemetery"] = {
		[1] = { -216.822, 6.515, 139.917}, --the way to Rostok
		[2] = { 85.541, 4.834, 62.382}, --the helicopters
		[3] = { 87.56, 6.566, 203.66}, --the fire trucks
		[4] = { -39.466, 10.116, 340.233}, --the radioactive hills
		[5] = { 219.7, 7.659, 304.56}, --the north eastern checkpoint
		[6] = { -10.543, 24.334, -88.519}, --the hill in the woods
		[7] = { -139.04, 1.867, -37.843}, --the valley
		[8] = { -91.354, 6.6, -299.094}, --the containers
		[9] = { 50.707, 13.272, -371.74} --the southern parking lot
		},
	["l01_escape"] = {
		[1] = { -156.24, -28.86, -344.82}, --the southern checkpoint
		[2] = { -190.0, -18.32, -147.271}, --the rookie village
		[3] = { -215.8, -7.9, -39.57}, --the trash pit
		[4] = { 86.19, -6.59, -16.25}, --the car park
		[5] = { 58.5, 3.05, 135.78}, --the railway embankment
		[6] = { 18.44, 2.03, 277.14}, --the farm
		[7] = { 104.92, 2.94, 510.45}, --the anomaly in the woods
		[8] = { 319.45, 13.92, 219.38}, --the train tunnel
		[9] = { 17.83, 17.45, 661.86} --the northern checkpoint
		},
	["l02_garbage"] = {
		[1] = { 37.24, 2.14, 225.37}, --the Rostok checkpoint
		[2] = { -213.44, 0.43, 105.17}, --the Synapse anomaly
		[3] = { -112.15, 2.02, 10.16}, --the Depot
		[4] = { -77.65, -0.95, -211.41}, --the vehicle graveyard
		[5] = { 94.49, 1.75, -143.77}, --the swamp
		[6] = { 94.77, -1.31, -257.22}, --the anomaly by the road
		[7] = { 36.25, 2.13, -303.03} --the road to Cordon
		},
	["l03_agroprom"] = {
		[1] = { 160.72, 9.81, 96.51}, --the anomaly on the hill
		[2] = { 26.26, 1.46, -6.7}, --the northern complex
		[3] = { 12.68, 0.13, -256.75}, --the anomaly to the south
		[4] = { -126.75, 1.45, -183.51}, --the southern complex
		[5] = { -194.71, 1.23, -41.46}, --the Bedrock Claws anomaly
		[6] = { -214.78, 3.58, 58.75} --the swamps
		},
	["l04_darkvalley"] = {
		[1] = { -112.69, 2.3, -485.54}, --the abandoned farm
		[2] = { 91.62, 3.32, -481.87}, --the Glowing Pit anomaly
		[3] = { 134.25, 2.23, -309.97}, --the moving fireball
		[4] = { 7.68, 1.45, -102.67}, --the factory
		[5] = { 112.59, 1.7, -66.32}, --the gas station
		[6] = { 30.21, 1.66, 14.56}, --the bandit base
		[7] = { -146.82, 2.39, -196.14} --the exit to the Garbage
		},
	["l05_bar"] = {
		[1] = { 89.2, 1.65, 139.18}, --the western checkpoint
		[2] = { 130.31, 1.8, 47.0}, --the entrance to the bar
		[3] = { 205.14, 1.61, 96.77}, --the Duty base
		[4] = { 37.67, -1.41, 301.72} --the road to the Army Warehouses
		},
	["l06_rostok"] = {
		[1] = { -83.34, -14.13, -218.59}, --the road to Yantar
		[2] = { -158.44, -4.35, -87.61}, --the burning tunnel
		[3] = { -236.53, 1.65, 53.01}, --the construction site
		[4] = { -30.32, 1.66, 144.36}, --the parking lot
		[5] = { 31.64, 1.04, 139.91} --the road to Rostok
		},
	["l07_military"] = {
		[1] = { -304.69, -20.42, 49.06}, --the old farmstead
		[2] = { -182.28, -7.18, 20.62}, --the anomaly on the southern hill
		[3] = { -7.5, -4.53, 33.44}, --the Freedom base
		[4] = { 54.76, -9.58, 125.94}, --the old shack
		[5] = { -289.24, -21.03, 237.12}, --the abandoned village
		[6] = { -15.75, -1.53, 438.12}, --the road to Dead City
		[7] = { -198.25, -2.75, 419.77} --the road to Radar
		},
	["l08_yantar"] = {
		[1] = { -16.3, -10.83, -243.71}, --the anomaly behind the plant
		[2] = { 31.51, -10.08, -272.61}, --the mobile lab
		[3] = { -169.33, 4.7, -157.45}, --the plant
		[4] = { 102.32, 1.6, -39.23}, --the entrance to the plant
		[5] = { -21.81, 2.15, 3.46} --the road to Dead City
		},
	["l09_deadcity"] = {
		[1] = { 154.53, -1.47, -24.22}, --the tunnel to the Army Warehouses
		[2] = { -9.47, 1.92, -201.1}, --the road to Yantar
		[3] = { -39.93, 3.39, 31.96}, --the mercenary base
		[4] = { -59.58, 2.74, 96.5} --the road to Limansk
		},
	["l10_limansk"] = {
		[1] = { -46.64, -3.35, -239.41}, --the road to Dead City
		[2] = { 4.1, 1.65, -359.17} --the tunnel to Red Forest
		},
	["l10_radar"] = {
		[1] = { 12.27, 1.36, -64.97}, --the antennas
		[2] = { 384.88, -32.47, 140.24} --the road to Pripyat
		},
	["l10_red_forest"] = {
		[1] = { -119.31, 1.78, -270.63}, --the bridge
		[2] = { -2.74, -1.55, -231.93}, --the Superconductor anomaly
		[3] = { 208.88, -4.89, -107.13}, --the tunnel camp
		[4] = { 124.43, 1.79, -271.92}, --the road to Radar
		[5] = { -85.2, 3.93, -56.17}, --the open field
		[6] = { -56.6, 2.05, -31.23} --the road to Jupiter
		},
	["l11_pripyat"] = {
		[1] = { 4.03, -0.04, -256.47}, --the road to Radar
		[2] = { 6.42, 1.65, 159.31} --the Monolith base
		},
	["labx8"] = {
		[1] = { 0, 0, 0} --the lab
		},
	["pripyat"] = {
		[1] = { 81.8565, -16.6709, -1054.051}, --the Prometheus theater
		[2] = { 293.7553, 0.6782, 231.0446}, --the river port
		[3] = { 11.1927, 4.4952, 277.1345}, --the old KBO
		[4] = { 56.3268, 1.6092, 127.6943}, --the school
		[5] = { 222.1708, -0.2035, 32.2432}, --the hospital
		[6] = { -59.2026, 8.6021, 94.3039}, --KBO Jubilee
		[7] = { 154.753, -0.0955, -185.3917}, --the laundromat
		[8] = { -109.6032, 4.1258, -105.4647}, --the playground
		[9] = { 46.9189, 16.5275, -139.9859}, --the dormitory
		[10] = { -198.7285, -0.1768, -199.4987}, --the grocery store
		[11] = { -101.6807, 0.5108, -257.1676}, --the department store
		[12] = { -181.141, 0.5491, -347.6817}, --the book store
		[13] = { -177.9315, -0.5841, -30.081}, --the Volcano anomaly
		[14] = { 154.266, 0.0355, 216.7533} --the Vine anomaly
		},
	["zaton"] = {
		[1] = { -33.0228, 0.4555, -200.7156}, --the Claw anomaly
		[2] = { -355.6813, 40.0176, -325.4126}, --the Iron Forest anomaly
		[3] = { -349.0496, 18.3864, 345.0177}, --the sawmill
		[4] = { -400.3414, 6.4376, -9.3092}, --the antenna complex
		[5] = { 321.9968, 33.2427, -403.7212}, --the waste processing plant
		[6] = { 0.5964, 20.9242, -332.0877}, --the Circus anomaly
		[7] = { 420.0504, 36.2633, -17.5632}, --the ranger station
		[8] = { 132.5715, -7.3392, 185.0458}, --Skadovsk
		[9] = { -48.5605, 24.1285, 303.5849}, --the burnt village
		[10] = { 421.4176, -4.357, 413.4552}, --the Boiler anomaly
		[11] = { -355.5159, 7.6103, 250.3168}, --the swamp
		[12] = { -173.2566, 7.7176, 99.8053}, --Izumrudnoye
		[13] = { 11.8022, -5.1532, 35.2991}, --Shevchenko
		[14] = { 394.4182, -5.8341, 228.9845}, --the dredge station
		[15] = { 212.8967, 6.8029, 14.0857}, --the dock cranes
		[16] = { -283.9678, 21.0929, -136.5675}, --the Oakpine anomaly
		[17] = { -103.5785, -5.4548, -220.5178}, --the refuelling station
		[18] = { 152.5881, -6.8237, -139.0262}, --the old barge
		[19] = { 323.3748, -5.2372, -219.5806}, --the Scar anomaly
		[20] = { 429.9237, 20.2642, -182.6681}, --Preobrazhensky bridge
		[21] = { 77.0241, 39.0102, -478.4914}, --the southern plateau
		[22] = { -135.3534, 24.5687, -412.9718} --the workshop substation
		}
}

local function get_object_levelname(obj)
	if not (obj) then 
		return "nil"
	end 
	
	local gvid = obj.m_game_vertex_id or obj.game_vertex_id and obj:game_vertex_id()
	if not (gvid) then 
		return "nil"
	end
	
	local gg = game_graph()
	if (gg:valid_vertex_id(gvid)) then
		cvertex = gg:vertex(gvid)
		return alife():level_name(cvertex:level_id())
	end
			
	return "nil"
end

function GetPointDescription(obj)
	local level_name = get_object_levelname(obj)
	if not (level_name) then 
		return 
	end 
	
	local m_s = game.translate_string("st_dyn_news_"..level_name)
	local point = type(obj.position) == "function" and obj:position() or obj.position
	if not (point and all_points[level_name]) then 
		return m_s
	end
	
	local m_point = nil
	local near_id = nil
	local near_dist = nil
	for key0,value in ipairs(all_points[level_name]) do
		local pos = vector():set(value[1],value[2],value[3])
		local dist = pos:distance_to_sqr(point)
		if (near_dist == nil or dist < near_dist) then
			near_dist = dist
			near_id = key0
			near_point = pos
		end
		if (near_dist <= 30) then -- pointless to process further
			break 
		end
	end
	
	if not (near_point) then
		return m_s
	end
	
	local m_str = game.translate_string("st_dyn_"..level_name.."_daleko_"..near_id)
	local m_str0 = game.translate_string("st_dyn_"..level_name.."_blizko_"..near_id)
				
	if near_dist <= 20 then
		return strformat("%s %s",m_s,m_str0)
	elseif near_dist < 50 then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_near"),m_str)
	elseif near_dist < 100 then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_close"),m_str)
	end
	
	local dx = point.x-near_point.x
	local dy = point.z-near_point.z
	local radians = math.atan2(dy,dx)
	local angle = 0
	if (radians) then
		angle=radians*57
		if(angle < 0)then 
			angle = angle+360 
		end
		if(angle > 360)then 
			angle = angle-360 
		end
	end
	
	if (angle>=330 or angle<=30) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_east"),m_str)
	elseif (angle>30 and angle<=60) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_north_east"),m_str)
	elseif (angle>60 and angle<=120) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_north"),m_str)
	elseif (angle>120 and angle<=150) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_north_west"),m_str)
	elseif (angle>150 and angle<=210) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_west"),m_str)
	elseif (angle>210 and angle<=240) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_south_west"),m_str)
	elseif (angle>240 and angle<= 300) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_south"),m_str)
	elseif (angle>300 and angle<=330) then
		return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_south_east"),m_str)
	end
		
	return strformat("%s %s %s",m_s,game.translate_string("st_dyn_news_close"),m_str)
end

local tips_icons = {
	dolg     	= "ui_icon_news_news_dolg",
	freedom  	= "ui_icon_news_news_svoboda",
	army     	= "ui_icon_news_news_voen_stalk",
	stalker  	= "ui_iconsTotal_grouping",
	csky  		= "ui_iconsTotal_grouping",
    killer   	= "ui_icon_news_news_naim",
    bandit   	= "ui_icon_news_news_bandos",
	deth	 	= "ui_icon_news_deth",
	all		 	= "ui_icon_news_all",
	signal		="ui_inGame2_Istoriya_dolga",
	surge 		= "ui_inGame2_Vibros",
	default		="ui_iconsTotal_grouping"
}
function send_tip(msg, header, timeout, showtime, sender, sound,icon_by)
	if not (msg and db.actor) then 
		return false
	end
	
	msg = "%c[default]" .. game.translate_string(msg)
	header = header or game.translate_string("st_tip")
	timeout = timeout or 0 
	showtime = showtime or 7
	sender = sender or "default"

	if sound =="news" then
		player = sound_object([[device\pda\pda_tip]])
	elseif sound == "danger" then
		player = sound_object([[device\pda\pda_alarm]])
	elseif sound == nil then
		player = sound_object([[device\pda\pda_tip]])
	end
  
	player:play(db.actor,timeout,sound_object.s2d)
  
	if icon_by=="gr" then
		ui_sender = tips_icons[sender]
	elseif  icon_by=="npc" then
		ui_sender = sender
	elseif icon_by==nil then
		ui_sender = tips_icons[sender]
	end
  
	if not (ui_sender) then
		return false 
	end

	db.actor:give_game_news(header, msg, ui_sender, timeout*1000, showtime*1000)

	return true
end

function GetCommunityDescription(obj,index)
	local comm = obj:character_community()
	if (obj:id() == 0 and comm ~= "actor") then 
		comm = comm:sub(7)
	end 
	
	local msg = game.translate_string("st_dyn_news_comm_" .. comm .. "_" .. index)
	if (msg == "st_dyn_news_comm_" .. comm .. "_" .. index) then
		return "some asshole"
	end
	
	return msg
end

function GetMonsterDescription(obj,index)
	local sec = obj:section()
	local cls = obj:clsid()
	local msg = game.translate_string("st_dyn_news_" .. sec .. "_" .. index)
	if (msg == "st_dyn_news_" .. sec .. "_" .. index) then
		msg = nil
	end
	if msg then
		return msg
	elseif not (IsMonster(nil,cls)) then
		if sec:find("_zombied") then
			return game.translate_string("st_dyn_news_zombied_" .. index)
		else
			return "not a monster"
		end
	end
	local m_class = {
		[clsid.bloodsucker_s] 			= "bloodsucker",
		[clsid.boar_s] 					= "boar",
		[clsid.dog_s] 					= "dog",
		[clsid.flesh_s] 				= "flesh",
		[clsid.pseudodog_s] 			= "pseudodog",
		[clsid.burer_s] 				= "burer",
		[clsid.cat_s] 					= "cat",
		[clsid.rat_s]					= "rat",
		[clsid.chimera_s] 				= "chimera",
		[clsid.controller_s] 			= "controller",
		[clsid.fracture_s] 				= "fracture",
		[clsid.poltergeist_s] 			= "poltergeist",
		[clsid.gigant_s] 				= "gigant",
		[clsid.zombie_s] 				= "zombie",
		[clsid.snork_s] 				= "snork",
		[clsid.tushkano_s] 				= "tushkano",
		[clsid.psy_dog_s] 				= "psy_dog",
		[clsid.psy_dog_phantom_s] 		= "psy_dog_phantom"
	}
	return game.translate_string("st_dyn_news_" .. m_class[cls] .. "_" .. index) or ""
end

function GetWeaponClass(obj)
	local wpn = obj:active_item()
	if not (wpn) then 
		return 1 
	end
	local cls = wpn:clsid()
	if (IsRifle(nil,cls)) then
		return wpn:weapon_is_silencer() and 9 or 2
	elseif (IsPistol(nil,cls)) then 
		return wpn:weapon_is_silencer() and 9 or 3
	elseif (IsSniper(nil,cls)) then
		return wpn:weapon_is_silencer() and 9 or 4
	elseif (IsShotgun(nil,cls)) then 
		return 5
	elseif (cls == clsid.wpn_knife_s) then 
		return 1 --6
	elseif (IsLauncher(nil,cls)) then
		return 7
	elseif (cls == clsid.wpn_grenade_f1 or cls == clsid.wpn_grenade_rgd5) then 
		return 8
	end
	return 1
end 

function GetWeaponDescription(obj,index)
	local cls = GetWeaponClass(obj)
	return game.translate_string("st_dyn_news_wpn_cls_"..cls.."_"..index)
end